<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Code by Codes]]></title>
  <link href="http://www.codebycodes.com/atom.xml" rel="self"/>
  <link href="http://www.codebycodes.com/"/>
  <updated>2015-08-17T09:13:12-04:00</updated>
  <id>http://www.codebycodes.com/</id>
  <author>
    <name><![CDATA[Cody Norman]]></name>
    <email><![CDATA[wcodynorman@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Creating Rails Application Templates]]></title>
    <link href="http://www.codebycodes.com/blog/2015/08/17/creating-rails-application-templates/"/>
    <updated>2015-08-17T09:11:43-04:00</updated>
    <id>http://www.codebycodes.com/blog/2015/08/17/creating-rails-application-templates</id>
    <content type="html"><![CDATA[<p>Programmers are lazy, that is probably one of the greatest things about us.  Anything that takes slightly longer than we think it should “Hmmmmm……I wonder if I could fix that” or “I bet I could make that better&#8221;</p>

<p>I don’t know about you, but I’m the type that can get easily distracted by shiny new things to try out, whether it’s a new framework, gem, pattern, or fancy burbon (I mean, we can’t program all the time)</p>

<p>I started looking into Rails application templates to try to help out these two problems for me.  If I want to try out a new feature, follow along with a tutorial, or just start tinkering with a new project I it takes me a little while to get everything set up to my preferences.  Things like setting up devise, bootstrap, getting flash messages to play nicely with bootstrap and any other confing I think will help with whatever project I’m kicking off.</p>

<p>Why choose a template over just having a full application you can clone from github as a fresh starting point?  Rails templates are a much more powerful and versatile option.  Rails templates are built on Thor which is probably the best feature in Rails you’ve never heard about.  You’re probably pretty familiar with ActiveRecord, ActionController and so on, but Thor is a ruby library for creating command line apps with ruby (link Thor docs and jumpstart tutorial)  Every notice how you don’t have to run bundle install after you create a new rails app?  You have Thor to thank for that.</p>

<p>Adding in the ability to run commands and edit the files is a huge advantage.  It’s also an easy way to stick to best practices with less effort.  How?  You can do things like set up guard, r-spec, and even create a git repo and make an initial commit, all without having to write any code well, except for the template derp.</p>

<p>I’ll admit, I can be pretty sloppy with having tests in my personal apps.  If I’m pressed for time, I’ll normally choose cramming as many features as possible (the F-it Ship it mantra) than tests.  I think this helps combat that having my test suite all set up and ready to go</p>

<p>If you want the TL;DR version, you can create a new rails app from the template by running:</p>

<p>COMMANDS</p>

<p>Or you can see the entire template here: (link Github)</p>

<p><a href="http://ryanswapp.com/posts/How-to-Make-a-Rails-Application-Template">http://ryanswapp.com/posts/How-to-Make-a-Rails-Application-Template</a></p>

<p>Talk about using &lt;&lt;-TEXT, &lt;&lt;-CODE from Thor dsl
When inserting the last line using before (talk about before and after), talk about what the regex is doing and link rubular.</p>

<p>As I was working on this post, I proved my exact point.  Front-end has never been my specialty so I found myself looking up bootstrap elements and past projects to refresh myself. Also, devise flash messages don’t always work well at first with bootstrap.  Luckilty, they know have a page on the devise wiki that helps you add the helper method and get everythi running smoothly.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploy Your Octopress Blog to Heroku]]></title>
    <link href="http://www.codebycodes.com/blog/2015/01/13/deploy-your-octopress-blog-to-heroku/"/>
    <updated>2015-01-13T18:08:38-05:00</updated>
    <id>http://www.codebycodes.com/blog/2015/01/13/deploy-your-octopress-blog-to-heroku</id>
    <content type="html"><![CDATA[<p>You may have noticed that my site&rsquo;s name is codebycodes, but I have yet to post any code on here.  Good job on calling me out.  So here it is.  This post will walk you through setting up a new blog with the Octopress blogging framework and deploy to Heroku.  This is the same setup that this blog is currently running on.</p>

<p>So first off, what exactly <em>is</em> Octopress.  Octopress is billed as a blogging framework for hackers.  It&rsquo;s a little different that some of the other blogging frameworks you may have had some experience with.<!--more--></p>

<p>The first is it&rsquo;s built with Ruby on top of another framework called Jekyll.  The second, is there is no database.  You create your posts using the <a href="http://en.wikipedia.org/wiki/Markdown">markdown</a> language and Ruby (with the help of Octopress) generates static HTML pages.  This make it pretty easy to set up and very fast since everything is a static page.</p>

<p>To get started, fire up your command line and clone a copy of the Octopress repository.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone git://github.com/imathis/octopress.git my_blog</span></code></pre></td></tr></table></div></figure>


<p>Next, navigate into the folder that was created when you cloned the Octopress code.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd my_blog</span></code></pre></td></tr></table></div></figure>


<p>Since Octopress is built off Ruby, lets check the current version of Ruby installed.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ruby -v</span></code></pre></td></tr></table></div></figure>


<p>If it&rsquo;s not at least <code>ruby 1.9.3</code> check out the documentation to upgrading your ruby version with RVM <a href="http://octopress.org/docs/setup/rvm/">here</a></p>

<p>So now, lets install the gems</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem install bundler
</span><span class='line'>$ bundle install
</span><span class='line'>$ rake install</span></code></pre></td></tr></table></div></figure>


<p>At this point, you should be able to see the basic template for your site.  Running</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake preview</span></code></pre></td></tr></table></div></figure>


<p>will generate the required files for you site and start a simple web server.  Check out localhost:4000 to see if your site is up and running.  It should look something like this</p>

<p><img class="left" src="http://www.codebycodes.com/images/Octopress_Screenshot.png" width="800" height="350" title="image" alt="images"></p>

<p>Now we need to remove <code>public</code> and <code>Gemfile.lock</code> from our <code>.gitignore</code> file.  We&rsquo;ll need this to add generated content to Heroku.</p>

<p>There are also a number of themes you can download and use for your Octopress site, or you can create your own.  You can find a good list of available themes <a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">here</a>.  There are pretty good instructions for downloading and installing a new theme for your blog.</p>

<p>Once that&rsquo;s take care of, let&rsquo;s head to <code>_config.yml</code> and start customizing the settings</p>

<p>Main settings:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">url</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">http://www.codebycodes.com</span>
</span><span class='line'><span class="l-Scalar-Plain">title</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Code by Codes</span>
</span><span class='line'><span class="l-Scalar-Plain">subtitle</span><span class="p-Indicator">:</span> <span class="s">&quot;Codes,</span><span class="nv"> </span><span class="s">rants</span><span class="nv"> </span><span class="s">and</span><span class="nv"> </span><span class="s">musings&quot;</span>
</span><span class='line'><span class="l-Scalar-Plain">author</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Cody Norman</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you&rsquo;d like to connect some of your external accounts, scroll down and check out some of the 3rd party services you can connect.</p>

<p>To add or remove services, add or remove the service in the <code>default_asides</code> section of the <code>._config.yml</code> file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">default_asides</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">asides/recent_posts.html</span><span class="p-Indicator">,</span> <span class="nv">asides/github.html</span><span class="p-Indicator">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>I think at one point, there was a default Twitter aside ready to go.  But now we&rsquo;ll have to make our own.  Since this seems like it&rsquo;d be one of the more popular things to have.  I&rsquo;ll show you how to add it.</p>

<p>First, add Twitter to your list of default asides.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">default_asides</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">asides/recent_posts.html</span><span class="p-Indicator">,</span> <span class="nv">asides/github.html</span><span class="p-Indicator">,</span> <span class="nv">asides/twitter.html</span><span class="p-Indicator">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, let&rsquo;s head to Twitter to generate the code we need.  Log into your Twitter account and click on <code>Settings</code>.  Once you&rsquo;re there click on the <code>Widgets</code> tab.  You can update some of the options if you&rsquo;d like.  There is a nice preview on the side so you can play around with your configuration to get it set up how you like.  Now that you have all your settings squared away, click on the <code>Create Widget</code> button and copy the generated code.</p>

<p>Create the file <code>source/_includes/asides/twitter.html</code>  Once you have the new file open paste in the code you got for the Twitter widget.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h1&gt;</span>Twitter<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>  <span class="c">&lt;!-- PASTE THE CODE HERE! --&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>With some bells and whistles, it&rsquo;s time to create our first post.  We create all our new posts from the command line.  With your command line open in your blog&rsquo;s directory, let&rsquo;s create a new post</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>$ rake new_post[&quot;your title goes here&quot;]
</span><span class='line'># Creates source/_posts/2015-01-14-your-title-goes-here.markdown
</span></code></pre></td></tr></table></div></figure>


<p>The <code>new_post</code> command expects a naturally written title so don&rsquo;t worry about underscores, just write out the title as your normally would.  This filename will determine the url for the post.
<code>yourblog.com/blog/2015-01-14-your-title-goes-here/index.html</code>.</p>

<p>With our first post created, open up the file that was created and notice the top lines of the file.  This is the <a href="http://jekyllrb.com/docs/frontmatter/">yaml front matter</a>.  This is where you can set the predefined variables or add your own.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="l-Scalar-Plain">layout</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">post</span>
</span><span class='line'><span class="l-Scalar-Plain">title</span><span class="p-Indicator">:</span> <span class="s">&quot;Deploy</span><span class="nv"> </span><span class="s">your</span><span class="nv"> </span><span class="s">Octopress</span><span class="nv"> </span><span class="s">blog</span><span class="nv"> </span><span class="s">to</span><span class="nv"> </span><span class="s">Heroku&quot;</span>
</span><span class='line'><span class="l-Scalar-Plain">date</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">2015-01-13 18:08:38 -0500</span>
</span><span class='line'><span class="l-Scalar-Plain">comments</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'><span class="l-Scalar-Plain">categories</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">octopress, heroku</span>
</span><span class='line'><span class="l-Scalar-Plain">published</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span><span class='line'><span class="nn">---</span>
</span></code></pre></td></tr></table></div></figure>


<p>All of this info is going to be used by Octopress to process the posts and pages.  You&rsquo;re going to be writing your post in the <a href="http://en.wikipedia.org/wiki/Markdown">Markdown</a> language.  This is the same language you would see in the documentation on github project.  This format makes it much easier to share code snippets.  The syntax will take some getting used to, so you can find a pretty good cheatsheet <a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet">here</a>.</p>

<p>After you have some info in your post, let&rsquo;s check out how it looks.  First, let&rsquo;s run <code>rake generate</code> to create our pages into static html</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ rake generate</span>
</span></code></pre></td></tr></table></div></figure>


<p>Once all our static files are created, running <code>rake preview</code> will start up a web server and let us take our new blog for a test drive.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ rake preview</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we have a fully functioning blog, all we need to do now is deploy it somewhere.  This post will cover how to deploy your blog to Heroku.  You can also deploy your site to Github Pages.  Each user can have a free page on github (heroku is free also).  I chose Heroku because I normally have a couple of test or demo apps running anyway (you have up to 5 for free) so it makes it a little easier for me to manage.  If you&rsquo;d like to look into Github pages more, Octopress has some great <a href="http://octopress.org/docs/deploying/github/">documentation</a></p>

<p>In your terminal, install the <code>heroku</code> gem</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ gem install heroku</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you&rsquo;ve never deployed to Heroku, head over to their site and create an account.  Once you have your account, in your command line run <code>heroku create</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ heroku create</span>
</span></code></pre></td></tr></table></div></figure>


<p>It will ask for your account credentials and upload your public SSH key.  If you&rsquo;ve never created a public SSH key, <a href="https://help.github.com/articles/set-up-git/">Github</a> has a really great guide to getting it setup.</p>

<p>Once of my favorite features to Heroku is it&rsquo;s as easy to deploy as pushing code to Github.</p>

<p>Create a new app on Heroku and add a git remote named &lsquo;heroku&rsquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ git config branch.master.remote heroku</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you haven&rsquo;t done so yet, make sure that you&rsquo;ve edited your <code>.gitignore</code> file be removing <code>public</code> and <code>Gemfile.lock</code>.  Again, this will let you add your generated content to Heroku.</p>

<p>With your remote branch set up, we just need to commit and push as we would any normal git repository.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ rake generate</span>
</span><span class='line'><span class="l-Scalar-Plain">$ git add .</span>
</span><span class='line'><span class="l-Scalar-Plain">$ git commit -m &quot;updated my awesome site&quot;</span>
</span><span class='line'><span class="l-Scalar-Plain">$ git push heroku master</span>
</span></code></pre></td></tr></table></div></figure>


<p>Once that&rsquo;s complete, you can either head to the url that Heroku gave to you or run the open command from your command line and open it automatically.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ heroku open</span>
</span></code></pre></td></tr></table></div></figure>


<p>And that&rsquo;s it!  You now have your own blog up and running on Heroku.  If your having any issues, <a href="http://octopress.org/docs/">Octopress</a> has some really helpful documentation and so does <a href="https://devcenter.heroku.com/start">Heroku</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Time at Dreamit Ventures]]></title>
    <link href="http://www.codebycodes.com/blog/2014/12/10/my-time-at-dreamit-ventures/"/>
    <updated>2014-12-10T07:53:40-05:00</updated>
    <id>http://www.codebycodes.com/blog/2014/12/10/my-time-at-dreamit-ventures</id>
    <content type="html"><![CDATA[<p>On June 20th of this year, I boarded a flight bound for San Francisco.  Armed with only a suitcase and a laptop, I was heading to a coding bootcamp to follow a crazy dream of switching careers and becoming a developer.  I had no idea what the next 3 months would bring.  My first two weeks were spent on the top bunk at a hacker house.  My &ldquo;room&rdquo; was really the living room.  I didn&rsquo;t even have a chance to fall asleep with the light off and not have people working around me until week 3.<!-- more -->  I bounced around some of the local hacker houses I found on Airbnb and met some amazing people working on great things along the way.  The only way I was able to get any sleep, or cope with being in cramped spaces and living out of a suitcase was to absolutely pour myself into my work.  The closest thing I had to home was my laptop, wifi, and headphones.</p>

<p>The last couple of weeks at my bootcamp, I started getting ready for my return back to Philadelphia, not planning on sticking around too long after I got back.  After all, all of my tech contacts and networking over the past 3 months had been on the West Coast.  I was looking for some part-time/freelance work that I could jump into as soon as I got back to the East Coast.  That&rsquo;s when I came across a listing for Ruby on Rails developer as a startup called <a href="http://bestimators.com">Bestimators</a> .  Bestimators had just been accepted to <a href="http://www.dreamitventures.com/">Dreamit Ventures</a>.  It was too good of an opportunity not to at least send in an application.  I had said that the only thing would keep me in Philadelphia would be a dream scenario and thought it was pretty unlikely. Even then, I assumed I would get some experience and head back out to the bay area.  After a couple of online interviews, I was offered the position and immediately booked a flight back to Philly.  I was back in Philly on a Wednesday night. Thursday night, I had a chance to meet the team face to face about 30 minutes before the kickoff ceremony.  By Monday, I had code running on the production server.  The next 3 months would be a blistering pace of writing code, brainstorming, and trying to soak up as much knowledge as I possibly could.</p>

<p>The first thing I noticed was the people.  I&rsquo;m not just talking about the other people from the 11 other <a href="http://www.dreamitventures.com/dreamit_classes/philly-14/">companies</a> in the cohort with us. Everyone from the amazing founders of Dreamit, to the program managers and directors and the interns were top caliber.  Being around those types of people for hours on end, day and night is the best motivator I can think of.  On top of all that, Dreamit set us up with two powerhouse advisors, Nathan Derrick of <a href="https://www.supplyhog.com/">Supply Hog</a>(a fellow Dreamit alum) and Gabriel Weinberg, founder of <a href="https://duckduckgo.com/">DuckDuckGo</a> and author of <a href="http://tractionbook.com/">Traction</a>.</p>

<p>Dreamit brought in multiple entrepreneurs, with multiple exits and experience that can only be gained from being in the startup trenches for years and years.  Giving advice on everything from dealing with investors, how to pitch your product, financial modeling, how to assemble a team, and what they would have done differently when they were just starting out. On top of that, we had weekly fishbowl sessions.  A fishbowl is where one company would talk to the group about a particular issue they were dealing with, and the group would talk about possible options and strategies.  Sometimes, getting a fresh perspective on something, or someone else giving their point of view can make all the difference.</p>

<p>Over the last 3 months not only did I get some amazing hands on experience on how a company is built, but I got to see 11 other companies in various markets and industries do the same thing.</p>

<p>Last week we had our demo day, seeing the difference between everyone&rsquo;s initial pitch and the one given last week was mind blowing.  You can&rsquo;t accomplish everything you need to do in 3 months, and there is always going to be things you wish you would&rsquo;ve squeezed in or did
differently, but seeing the difference that surrounding yourself with the right people is pretty impressive.  You can check out the pitches from last week&rsquo;s demo day <a href="http://ow.ly/FFTxo">here</a>
<img class="center" src="http://www.dreamitventures.com/wp-content/uploads/2014/12/dip14-groupshot-dd.jpg" title="Demo Day #2" ></p>

<p>So what&rsquo;s next?  I guess you&rsquo;ll have to check back in and see.  As always, if you have any questions on the experience, or anything else, please feel free to drop me a line.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Site, New Format]]></title>
    <link href="http://www.codebycodes.com/blog/2014/12/03/new-site/"/>
    <updated>2014-12-03T07:10:42-05:00</updated>
    <id>http://www.codebycodes.com/blog/2014/12/03/new-site</id>
    <content type="html"><![CDATA[<p>Hello all!  My last post was on a different blog and a few months back. I decided to set up a new blog once I came across the <a href="http://octopress.org/">Octopress</a> blogging framework.  It&rsquo;s billed as &ldquo;A blogging framework for hackers&rdquo; making it much easier to share code snippets.  It&rsquo;s also built in Ruby so it seemed like a great project for me to tinker with.
This will be a place where I can share what I&rsquo;m working on, tips and tricks I pick up, and the occasional rant.</p>

<p>So&hellip; on the last update, <!--more-->I had just started working on SQL queries at the <a href="http://www.codingdojo.com">Coding Dojo</a> bootcamp.  Shortly after that, we began our PHP section of the bootcamp.  When we finally started working on programming instead of just HTML and CSS, I didn&rsquo;t look back.  The next 2 months or so, I tried to cram as much coding as I could into a day.  That was the main reason I wasn&rsquo;t able to keep up with my posts as much as I would have liked.  I&rsquo;ll going into a lot more detail about the bootcamp experience in a later post.  For now, I just wanted to catch things up.  My 3 months in Silicon Valley we great, but I ended up leaving about a week early.  It wasn&rsquo;t for any bad reason though, quite the contrary.  I was leaving early because I got an offer to start working as a Ruby on Rails developer at <a href="http://bestimators.com">Bestimators</a> back in Philadelphia.  The company was about to start a 3 month program with <a href="http://www.dreamitventures.com/">Dreamit Ventures</a>.  Dreamit is one of the top startup accelerators around with offices in New York, Austin, Israel, Baltimore, and Philadelphia.  Leaving the bootcamp a week early meant I had to miss out on presenting a final project at the Coding Dojo&rsquo;s demo day.  Today is the payback.  As I&rsquo;m writing this, the demo day for Dreamit Philly&rsquo;s class of 2014 is in about 3 hours.</p>

<p>Once demo day is wrapped up, and thing have settled down a bit, I&rsquo;ll talk about what it was like going from a coding bootcamp directly into a startup incubator for 3 months.</p>

<p>For now, thank you so much for cheking out the new blog and please feel free to ask me any questions you might have about switching careers, becoming a software developer, working at an early stage startup, or what it&rsquo;s like to go through a start up accelerator.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This Aint No Vacation.]]></title>
    <link href="http://www.codebycodes.com/blog/2014/07/09/this-aint-no-vacation/"/>
    <updated>2014-07-09T12:45:21-04:00</updated>
    <id>http://www.codebycodes.com/blog/2014/07/09/this-aint-no-vacation</id>
    <content type="html"><![CDATA[<p>I know, I know…having a double negative for my post title isn’t exactly good form.  Maybe it’s a remnant of my southern upbringing, but that’s been a bit of a motto for my stay out here.  I’m not on a vacation, I’m not at a summer camp, it’s a bootcamp.  That was more than apparent this past week. <!--more--> Coming into the end of my second week I had covered an enormous amount of information, pulling 12 plus hour days and still taking in new information everyday.  My first big challenge was when we started writing MySQL queries.  Don’t get me wrong, everything else I had done up to that point was extremely challenging, but I had at least some experience with.  This was completely new territory for me.  The first couple of days were pretty rough, but I kept reminding myself of one thing.  This was the reason I had left my entire life behind, packed my things and headed for the west coast…to be challenged.  I didn’t come out here to be patted on the back, I came here to push myself.  A few extra sessions over the long weekend and everything started to click.  I was back on track with renewed confidence, something I’ll definitely need. I know this won’t be the last I’ll really be pushed with fully grasping a new topic and things won’t be slowing down anytime soon.</p>

<p>On top of all of that, our first exam/certification was this weekend.  Keeping with the Dojo theme, it’s referred to as the Yellow Belt.  It may not sound very intimidating, but don’t let the title fool you.  The challenge is to recreate a website of their choosing from a screen shot…in 4 hours.  It wasn’t exactly a geocities, or angel fire page (for the youngsters out there, they were some of the first user created websites on the web back in the AOL and dial-up days.).  This was an actual business’s website.  A few weeks ago, this would’ve been a huge task for me to accomplish in any amount of time, much less 4 hours.  Nonetheless, I was able to get everything done with about 3 minutes to spare.  When I received my results back late last night, I got a 9.5 out of 10 “near perfect” on their grading scale.  I took about 30 seconds to revel in my score and started pounding away at the keys again, like I said this aint no vacation.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Times They Are a Changin']]></title>
    <link href="http://www.codebycodes.com/blog/2014/07/03/times-they-are-a-changin/"/>
    <updated>2014-07-03T12:38:59-04:00</updated>
    <id>http://www.codebycodes.com/blog/2014/07/03/times-they-are-a-changin</id>
    <content type="html"><![CDATA[<p>Today, I had a bit of a realization.  It was something that really made me realize how my mindset is changing.  I was plugging along at the dojo, and looked at the clock.  Something I do dozens of times a day.  The difference was what I thought afterwards.  It was around 3:30 or so and normally,<!--more--> I would be counting down the hours until I could go home and unwind.  Instead of wishing the time would pass faster, I was wishing it would move slower, wishing I could cram more hours into the day.  This is day 8 of the bootcamp and I’m usually there for about 12 hours a day, ride home and try to knock out another 2-3 hours when I get back to the hacker house.  It reminded me a a really good quote/parable about time a manager of mine sent out a while back.  I think it really speaks for itself so i’ll just end with that.  (I tried to find the source of the quote, and the only name I could find attached was Marc Levy)</p>

<blockquote><p>Imagine there is a bank account that credits your account each morning with $86,400. It carries over no balance from day to day.
Every evening the bank deletes whatever part of the balance you failed to use during the day. What would you do? Draw out every cent, of course?
Each of us has such a bank. It’s name is TIME.
Every morning, it credits you with 86,400 seconds.
Every night it writes off as lost, whatever of this you have failed to invest to a good purpose.
It carries over no balance. It allows no over draft. Each day it opens a new account for you. Each night it burns the remains of the day.
If you fail to use the day’s deposits, the loss is yours. There is no drawing against “tomorrow.”
You must live in the present on today’s deposits. Invest it so as to get from it the utmost in health, happiness and success!
The clock is running!! Make the most of today</p></blockquote>

<p>To realise the value of ONE YEAR, ask a student who failed a grade.</p>

<p>To realise the value of ONE MONTH, ask a mother who has given birth to a premature baby.</p>

<p>To realise the value of ONE WEEK, ask the editor of a weekly newspaper.</p>

<p>To realise the value of ONE HOUR, ask the lovers who are waiting to meet.</p>

<p>To realise the value of ONE MINUTE, ask a person who just missed a train.</p>

<p>To realise the value of ONE SECOND, ask someone who just avoided an accident.</p>

<p>To realise the value of ONE MILLISECOND, ask the person who won a silver medal at the Olympics.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week One]]></title>
    <link href="http://www.codebycodes.com/blog/2014/06/29/week-one/"/>
    <updated>2014-06-29T12:36:13-04:00</updated>
    <id>http://www.codebycodes.com/blog/2014/06/29/week-one</id>
    <content type="html"><![CDATA[<p>I haven’t been able to keep up with my blog post as much as I would have liked so far, but that’s with good reason.  With week one behind me at Coding Dojo, I’ve put in close to 70 hours of work between writing code, reading code, lectures, debugging, and working on assignments.  That figure would have terrified me before, but what I quickly realized is how much I love diving into these problems and assignments. <!--more--> It turns out I actually really enjoy the amount of time we’re putting in and the rate at which I’m writing better code in a shorter amount of time is phenomenal.  This weeks assignments were getting a solid base with writing HTML and CSS, then adding in Twitter’s Bootstrap framework and LESS.  Bootstrap and LESS have been invaluable additions to my budding development arsenal.</p>

<p>At first, my main concern was to get whatever I’m working on actually working and closely resembling the assignment.  Now, I’m changeling myself to see how few lines of code I can write and produce the same result.  Going back through older assignments and refactoring   gives me an idea of what to do better next time.</p>

<p>Nonetheless, I have came away with some good lessons from the first week.  One is to really embrace the Coding Dojo rules:</p>

<p>1.) Be Present  – This is not a 9-5 gig, that’s for sure.  Generally, I will arrive at the dojo around 7:30 – 8:00 (it’s a 6 mile bike for me, so some trips are slower than others) and work until at least 7:00.  After my ride home, I’ll generally spend another 2 hours or so working on that days tasks or getting a jumpstart on the next day.</p>

<p>2.) Strength through struggle – I think this rule has been the most beneficial for me so far.  Part of learning something that sticks with you is struggling through it.  Also, I’ve found things that I’ve learned while trying to find a solution helps solve other problems down the road.  It’s not like this is sink or swim.  This rule comes with the wonderful caveat of the 20 minute rule.  Don’t spend more than 20 minutes trying to figure out something on your own.  Time is at a premium, and you really want to be as efficient as possible.  After you’ve banged your head against the desk (metaphorically…at least most of the time) reach out to one of your classmates.  Sometimes, the simple matter of saying your problem out loud,   or thinking of it in a way to explain what’s going on to someone else can solve it for you.  If you and some of your group mates can’t figure out the issue then it’s time to grab an instructor.  I really love the system because it gives you a chance to debug other people’s code and work on problems in a group setting.  If the group can’t figure it out, one of the instructors will explain the issue on the whiteboard for the whole class.</p>

<p>3.) Be humble – This should be pretty self-explanatory.  Everyone is from different backgrounds, learns at a different pace, and has varying levels of experience with the material.</p>

<p>With week one down, I’ve met some amazing people from all sorts of backgrounds and watch my skill grow exponentially.  Something that would have otherwise taken me about a couple to a few days, I can have knocked out in 6-8 hours of solid work.  Really looking forward to see what week two has in store for me and my fellow code ninjas.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Departure]]></title>
    <link href="http://www.codebycodes.com/blog/2014/06/29/the-departure/"/>
    <updated>2014-06-29T11:58:52-04:00</updated>
    <id>http://www.codebycodes.com/blog/2014/06/29/the-departure</id>
    <content type="html"><![CDATA[<p>Before I get into what the application process was like for Coding Dojo, I thought I would go into some of the preparations for flying out and making arrangements, etc.<!--more--></p>

<p>First off, this is the first time I have ever bought a one-way ticket, not going to lie, felt a little weird.  The reason I didn’t purchase a round trip ticket is I wanted to leave the possibility of doing some interviews open.  Also, hitting the exact day I would need to fly back (and stick to since I’m stubborn and would refuse to pay change fees) 5-6 months down the road really seemed like hitting a moving target.</p>

<p>For finding a place to stay, Airbnb really seemed like my best bet.  I like the idea of verified photos and a middle man to make me feel a little more comfortable going into something like this blind.  While I’m at the bootcamp, I will be staying at a couple of the area “hacker houses/hostels”.  If you’re not familiar with the term, no worries…I wasn’t either.  It’s basically a house with a few rooms of bunk beds that you can rent out by the day, night, or month.  People working on their startups, doing internships, and other tech related shenanigans rent out the beds as needed.  I’m really excited to be surrounded with people from different tech backgrounds, working on different projects, and ideas.</p>

<p>One thing that was a bit overwhelming was packing.  I wanted to try to only check one bag (which I succeeded at) plus my carry on.  How do you pack everything your going to need for 3 months in a place that you’ve never been to?  I still don’t know the answer, but vacuum bags for the majority of my clothes were an absolute life saver.  The thing I was more concerned about was my gadgets, cords, and accessories.  With 50-70hrs a week for the next 12 weeks ahead of me, I wanted to try to be as prepared as possible.  I can always do laundry more often, but missing something that would make my life a lot easier would really get to me.  I basically packed up every charger, adapter, cord, hard drive, and flash drive I had.  I’m sure I’ve left something behind but hopefully it falls under the category of that would have been nice instead of <em>D’OH!!!!</em>. Only time will tell.  Either way, time for boarding….Let’s Do This!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introductions]]></title>
    <link href="http://www.codebycodes.com/blog/2014/06/17/introductions/"/>
    <updated>2014-06-17T11:56:41-04:00</updated>
    <id>http://www.codebycodes.com/blog/2014/06/17/introductions</id>
    <content type="html"><![CDATA[<p>Hello everyone!  I started this blog to chronicle my journey through the Coding Dojo bootcamp in Mountain View, CA this summer.  First things first, a bit of background about myself.<!--more--></p>

<p>If you haven’t already guessed by the web address, my name is Cody.  I’ve been living in Philadelphia for the past 4 years, but I’m originally from North Carolina.  For the most part, I really enjoy living in Philly except for the fact that everything that should be on a biscuit, is on a bagel but hey…no one is perfect.</p>

<p>My background is primarily in economics and finance and spent the past few years as a loan officer for a mortgage lender.  I know what you’re thinking, why would anyone want to leave the glamorous, exciting, rock star life of a loan officer?  Well, there were some things I really did enjoy about my job, mainly helping people who were severely  underwater on their homes.  Everything else was filled with red-tape and regulations which was the main reason I decided to leave to focus all my efforts on web development and programming.</p>

<p>I fly out to the west coast on Friday and the bootcamp starts on Monday.  I’ll go into more detail on the application process and some of the preparation I’ve done in a later post.</p>
]]></content>
  </entry>
  
</feed>
